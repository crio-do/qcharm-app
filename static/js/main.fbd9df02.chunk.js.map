{"version":3,"sources":["FetchCalls.js","Navbar.js","Highlight.js","Code.js","CustomInput.js","Output.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["qcharm_url","url","console","log","packRequest","request_body","method","mode","headers","body","JSON","stringify","copy","a","startTime","Date","now","fetch","response","responseTime","json","document","getElementById","innerHTML","paste","cut","displayError","showErrorMsg","status","trace","search","jump","getPrevLines","endTime","getNextLines","load","searchReplace","redo","undo","edit","searchAndReplace","save","replace","filename","inputs","language","output","Navbar","props","uploadFromFile","evt","click","runCode","state","editHandler","editBackEnd","querySelector","value","self","execute","fileName","split","then","result","setResult","render","Nav","style","background","height","borderBottom","Item","className","color","InputGroup","size","zIndex","Form","onSubmit","handleJumpEvent","FormControl","id","placeholder","aria-describedby","padding","border","fontSize","Button","type","display","findAndReplaceInterface","marginTop","onChange","replaceToggle","float","margin","name","getFileData","hidden","variant","onClick","DropdownButton","title","toUpperCase","onSelect","changeLan","Dropdown","eventKey","handleFindEvent","bind","handleReplaceEvent","handleFiles","jumpToSearchLine","setCaretLoc","data","selection","selectionEnd","row","prevLen","length","col","len","textArea","i","selectionStart","listOfCursors","lastIndex","lineNo","startingLineNo","requestBody","this","packEditRequest","applyResponse","searchLen","searchPattern","searchResult","setSearchResult","getSelection","focusNode","parentElement","scrollTop","findForm","fillSearchResult","textAreaValue","startCaret","getCaretLoc","endCaret","pageResponse","text","join","setData","updateStartingLineNo","pattern","searchBody","newRequestBody","Object","assign","oldPattern","newPattern","searchReplaceBody","replacePattern","req_body","content","checked","focus","preventDefault","reader","FileReader","fileToRead","files","setTimeout","readAsText","onloadend","writeFromFile","jumpPos","parseInt","handleJump","React","Component","Highlight","init","inputSel","outputSel","languageSel","focusInput","listenForInput","renderOutput","listenerForScroll","addEventListener","key","selStartPos","inputVal","keyCode","substring","stopImmediatePropagation","Prism","highlightAll","input","Code","fetchNewLines","editInProgress","width","Row","overflow","Col","sm","textAlign","spellCheck","onKeyDown","handleKeyDown","onCut","preventDefaultClipboardEvents","onCopy","onPaste","handleMouseClick","defaultValue","onScroll","handleScroll","handleFindUpDownEsc","searchTermRow","scrollToRow","lastSearch","incr","e","nativeEvent","startRow","startCol","endRow","endCol","pageId","forceEditCall","ctrlKey","scrollLeft","setInterval","numberOfLines","needsOfflineEdit","Math","abs","updateData","presentContent","setEditHandler","prevProps","equal","CustomInput","Output","readOnly","Editor","setState","showError","errorMsg","hideErrorMsg","setInputs","searchRow","scrollElement","window","devicePixelRatio","scrollHeight","page","tokens","ext","lang","file_info","updateLanguage","code","contentLength","before","newContentLength","newContent","force","Modal","show","Header","Title","Body","Footer","overflowY","App","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fbd9df02.chunk.js","sourcesContent":["\nfunction qcharm_url() {\n\n    var url = \"http://localhost:8081/qcharm/\"\n    //var url = window.location.href + \"/qcharm/\"\n    console.log(url)\n\n    return url\n}\n\nfunction packRequest(request_body){\n    var req_body = {\n        method: 'POST',\n        mode:'cors',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(request_body)\n    }\n    return req_body;\n}\n\nexport async function copy(request_body) {\n    let startTime = Date.now();\n\n    console.log(\"copy :\", request_body);\n    var response = await fetch(qcharm_url() + \"copy_new\", packRequest(request_body));\n    await response;\n    let responseTime = Date.now() - startTime;\n\n    var body = response.json();\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n    return body\n}\n\nexport async function paste(request_body) {\n    let startTime = Date.now();\n    console.log(\"paste :\", request_body);\n    var response = await fetch(qcharm_url() + \"paste_new\", packRequest(request_body));\n    await response;\n    var body = response.json();\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n    return body\n}\n\nexport async function cut(request_body) {\n    let startTime = Date.now();\n\n    console.log(\"Cut :\", request_body)\n    var response = await fetch(qcharm_url() + \"cut_new\", packRequest(request_body));\n    await response;\n    var body = response.json()\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n    return body\n}\n\nexport async function setCopyBuffer(data_copied, showErrorMsg) {\n    console.log(\"Data copied = \" + data_copied)\n    var request_body = {\n        'lines' : data_copied.split('\\n')\n    }\n\n    let startTime = Date.now();\n    var response = await fetch(qcharm_url() + \"copy_buffer\", packRequest(request_body));\n    var body = await response;\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n    if(body.status != null && body.status !== 200) {\n        return displayError(body, showErrorMsg);\n    }\n}\n\nexport async function displayError(body, showErrorMsg) {\n    if (body.status === 400) {\n    } else {\n        showErrorMsg(body.trace);\n    }\n    return \"\";\n}\n\n\nexport async function search(request_body) {\n    console.log(\"search :\", request_body);\n    let startTime = Date.now();\n    var response = await fetch(qcharm_url() + \"search_new\", packRequest(request_body));\n    var body = await response.json();\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n\n    console.log(\"Search result\");\n    console.log(body);\n    console.log(\"Search result\");\n\n    return body;\n}\n\nexport async function jump(request_body) {\n    // Sends the line number to jump to\n    // Expects the page corresponding to the line number. !!RERENDERING REQUIRED\n    console.log(\"jump :\", request_body);\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"jump_new\", packRequest(request_body));\n    await response;\n    let responseTime = Date.now() - startTime;\n    var body = response.json();\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n    return body\n}\n\nexport async function getPrevLines(request_body) {\n    console.log(\"getPrevLines :\", request_body);\n    request_body['lineNumber'] = request_body['lineNumber'] - 1\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"get_prev_lines_new\", packRequest(request_body));\n    let endTime = Date.now();\n    let responseTime = endTime-startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    //NOTE: reponse is a promise and it serves only once\n    // hence two response.json() call will given some error\n    var body = await response.json();\n    return body;\n}\n\nexport async function getNextLines(request_body) {\n    // FIXME: multiple load_file versions\\\n    console.log(\"getNextLines :\", request_body);\n    request_body['lineNumber'] = request_body['lineNumber'] - 1\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"get_next_lines_new\", packRequest(request_body));\n    let endTime = Date.now();\n    let responseTime = endTime-startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    //NOTE: reponse is a promise and it serves only once\n    // hence two response.json() call will given some error\n    var body = await response.json();\n    // console.log(body)\n    return body\n}\n\nexport async function load(request_body, showErrorMsg) {\n    // FIXME: multiple load_file versions\n    console.log(\"load :\", request_body);\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"load_file_new\", packRequest(request_body))\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    //NOTE: reponse is a promise and it serves only once\n    // hence two response.json() call will given some error\n    var body = await response.json();\n    if(body.status != null && body.status !== 200) {\n        return displayError(body, showErrorMsg);\n    }\n    return body;\n}\n\nexport async function searchReplace(request_body) {\n    console.log(\"Search Replace :\", request_body);\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"search_replace_new\", packRequest(request_body));\n    await response\n    let responseTime = Date.now() - startTime;\n    let body = response.json();\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n\n    return body\n}\n\nexport async function redo(request_body) {\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"redo\", packRequest(request_body))\n    await response\n    let responseTime = Date.now() - startTime;\n    let body = response.json();\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n\n    return body\n}\n\nexport async function undo(request_body) {\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"undo\", packRequest(request_body))\n    await response\n    let responseTime = Date.now() - startTime;\n    var body = response.json()\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n\n    return body\n}\n\n// ============= old implementations =================================\nexport async function edit(request_body, showErrorMsg) {\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"edit_new\", packRequest(request_body))\n    await response\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    if(response.status != null && response.status !== 200) {\n        return displayError(body, showErrorMsg);\n    }\n    var body = response.json()\n    console.log(body);\n    return body\n}\n\nexport async function searchAndReplace(request_body, showErrorMsg) {\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"search_replace\", packRequest(request_body));\n    let body = await response.json();\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    if(body.status != null && body.status !== 200) {\n        return displayError(body, showErrorMsg);\n    } else {\n        console.log(body);\n    }\n}\n\n// FIXME: NOT IMPLEMENTED\nexport async function save(request_body, showErrorMsg){\n    // Sends no data\n    // Expects no data\n    let startTime = Date.now();\n    let body = await fetch(qcharm_url() + \"save\", packRequest(request_body))\n    let endTime = Date.now();\n    let responseTime = endTime-startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    if(body.status != null && body.status !== 200) {\n        return displayError(body, showErrorMsg);\n    }\n    console.log(body.json());\n}\n\nexport async function replace(request_body, showErrorMsg){\n    // Sends the term to be replaced\n    // Expects the page after the term has been replaced. !!RERENDERING REQUIRED\n    let startTime = Date.now();\n    let body = await fetch(qcharm_url() + \"replace\", packRequest(request_body));\n    let endTime = Date.now();\n    let responseTime = endTime-startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    if(body.status != null && body.status !== 200) {\n        return displayError(body, showErrorMsg);\n    } else {\n        console.log(body.json());\n    }\n}\n\nexport async function getCopyBuffer(showErrorMsg) {\n    let startTime = Date.now();\n    var response = await fetch(qcharm_url() + \"copy_buffer\");\n    var body = await response.json();\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n\n    if(body.status != null && body.status !== 200) {\n        return displayError(body, showErrorMsg);\n    }\n    return body['lines'].join(\"\\n\");\n}\n\nexport async function execute(filename, inputs, language) {\n    // Sends nothing\n    // Expects the page after the undo operation. !!RERENDERING REQUIRED\n    var request_body = {\n        'fileName' : filename,\n        'inputs': inputs,\n        'language': language\n    }\n    let startTime = Date.now();\n    let response = await fetch(qcharm_url() + \"/run_file\", packRequest(request_body))\n    var body = await response.json()\n    let responseTime = Date.now() - startTime;\n    document.getElementById('responseTime').innerHTML = \"Response Time: \" + responseTime + \"ms\";\n    console.log(body);\n\n    return body.output;\n}\n","import React from 'react';\nimport {search, searchReplace, jump, searchAndReplace, displayError, execute} from './FetchCalls';\nimport {Nav, Button, Dropdown, DropdownButton, InputGroup, FormControl, Form} from 'react-bootstrap';\n\nclass Navbar extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleFindEvent = this.handleFindEvent.bind(this);\n        this.handleReplaceEvent = this.handleReplaceEvent.bind(this);\n        this.handleFiles = this.handleFiles.bind(this);\n        this.getFileData = this.getFileData.bind(this);\n        this.jumpToSearchLine = this.jumpToSearchLine.bind(this);\n        this.setCaretLoc = this.setCaretLoc.bind(this);\n        this.replaceToggle = this.replaceToggle.bind(this);\n        this.handleJumpEvent = this.handleJumpEvent.bind(this);\n        this.findAndReplaceInterface = this.findAndReplaceInterface.bind(this);\n        this.searchAndReplace = this.searchAndReplace.bind(this);\n    }\n    uploadFromFile = evt => {\n        document.getElementById('myfile').click();\n    }\n\n    runCode = () => {\n        this.props.state.editHandler.editBackEnd();\n        let inputs = document.querySelector(\".custom-input\").value;\n        console.log(inputs);\n        let self = this;\n        execute(this.props.state.fileName, inputs.split('\\n'), this.props.state.language).then((result) => {\n            self.props.setResult(result);\n        });\n    }\n\n    getCaretLoc(data=document.querySelector(\".code-input\").value, selection=document.querySelector(\".code-input\").selectionEnd){\n        var row = 0;\n        var col = 0;\n        data = data.split(\"\\n\");\n        var prevLen = 0;\n        while(row<data.length && (prevLen+data[row].length+1)<selection){\n            prevLen=prevLen+data[row].length+1;\n            row++;\n        }\n        col = selection-prevLen;\n        return [row,col];\n    }\n\n    setCaretLoc(row, col, len=0){\n        var textArea = document.querySelector('.code-input');\n        var data = textArea.value;\n        data = data.split(\"\\n\");\n        var prevLen = 0;\n        var i=0;\n        while(i<row){\n            prevLen=prevLen+data[i].length+1;\n            i++;\n        }\n        prevLen+=col;\n        textArea.selectionStart=prevLen;\n        textArea.selectionEnd=prevLen+len;\n        console.log(\"row & col\", row, col);\n    }\n\n    async jumpToSearchLine(listOfCursors, lastIndex, self){\n        var lineNo = listOfCursors[lastIndex]['lineNo'];\n        if(lineNo>(self.props.state.startingLineNo+self.props.state.data.split(\"\\n\").length) || lineNo<(self.props.state.startingLineNo)){\n            var requestBody = this.packEditRequest()\n            requestBody['startingLineNo'] = lineNo;\n            requestBody['numberOfLines'] = 50;\n            var body = await jump(requestBody);\n            this.applyResponse(body);\n\n            //var content = body['lines'].join('\\n');\n            //self.props.setData(content, self.props.state.length);\n            //self.props.updateStartingLineNo(body['startingLineNo']);\n        }\n        let searchLen = document.getElementById('find').value.length;\n        this.setCaretLoc(lineNo-self.props.state.startingLineNo, listOfCursors[lastIndex]['columnNo'], searchLen);\n    }\n\n    async fillSearchResult(searchPattern){\n        let self = this;\n\n        var listOfCursors = await this.search(searchPattern);//this.props.state.startingLineNo, searchPattern, this.props.state.fileName);\n        await listOfCursors\n        console.log(\"cursors \", listOfCursors);\n        //if(listOfCursors.status != null && listOfCursors.status !== 200) {\n        //    return displayError(listOfCursors, this.props.showErrorMsg);\n        //} else {\n            // set page as well\n            var searchResult = {\n                'presentIndex': 0,\n                'listOfCursors': listOfCursors\n            };\n            this.props.setSearchResult(searchResult);\n            console.log(typeof(listOfCursors));\n            if (listOfCursors.length > 0) {\n                self.jumpToSearchLine(listOfCursors, 0, self);\n                document.getSelection().focusNode.parentElement.scrollTop = 0;\n            }\n        //}\n    }\n\n    handleFindEvent(evt) {\n        let findForm = document.getElementById('find');\n        this.fillSearchResult(findForm.value);\n    }\n\n    packEditRequest() {\n        var textAreaValue = document.querySelector(\".code-input\").value;\n        data = textAreaValue.split(\"\\n\");\n        var startCaret = this.getCaretLoc(textAreaValue, document.querySelector(\".code-input\").selectionStart)\n        var endCaret = this.getCaretLoc(textAreaValue, document.querySelector(\".code-input\").selectionEnd)\n\n        var data = textAreaValue;\n        //this.props.setData(data, this.props.state.length);//data.split(\"\\n\").length);//NOT REQUIRED\n        //data = data.split(\"\\n\");\n\n        var newRequestBody = {\n            'cursorStart': {\n                'lineNo': startCaret[0],\n                'columnNo' : startCaret[1]\n            },\n\n            'cursorEnd': {\n                'lineNo' : endCaret[0],\n                'columnNo' : endCaret[1]\n            },\n            'startingLineNo': this.props.state.startingLineNo,\n            'endingLineNo': this.props.state.startingLineNo + this.props.state.length,\n            'fileName' : this.props.state.fileName,\n            'dataNow': data,\n            'start': document.querySelector(\".code-input\").selectionStart,\n            'end' : document.querySelector(\".code-input\").selectionEnd\n        }\n\n        return newRequestBody;\n    }\n\n    updatePageResponse(pageResponse) {\n        var text = pageResponse['lines'].join(\"\\n\")\n        this.props.setData(text, pageResponse['lines'].length);\n\n        this.setCaretLoc(pageResponse['cursorAt']['lineNo'], pageResponse['cursorAt']['columnNo'])\n    }\n\n    applyResponse(pageResponse) {\n        console.log(pageResponse);\n        var text = pageResponse['lines'].join(\"\\n\")\n        this.props.setData(text, pageResponse['lines'].length);\n        this.props.updateStartingLineNo(pageResponse['startingLineNo'])\n\n        var row = pageResponse['cursorAt']['lineNo'] - this.props.state.startingLineNo;\n        var col = pageResponse['cursorAt']['columnNo']\n        this.setCaretLoc(row, col);\n    }\n\n    async search(pattern) {\n        var body = this.packEditRequest();\n        var searchBody = {\n            'pattern' : pattern,\n        }\n\n        var newRequestBody = Object.assign({}, body, searchBody);\n        var pageResponse = await search(newRequestBody);\n        //this.applyResponse(pageResponse); // FIXME\n        //\n        return pageResponse\n    }\n\n    async searchReplace(oldPattern, newPattern) {\n        var body = this.packEditRequest();\n        var searchReplaceBody = {\n            'pattern' : oldPattern,\n            'newPattern' : newPattern\n        }\n\n        var newRequestBody = Object.assign({}, body, searchReplaceBody);\n        var pageResponse = await searchReplace(newRequestBody);\n        this.applyResponse(pageResponse);\n    }\n\n\n    async searchAndReplace(searchPattern, replacePattern) {\n        var req_body = {\n           'startingLineNo' : this.props.state.startingLineNo,\n           'length' : this.props.state.data.split('\\n').length,\n           'oldPattern' : searchPattern,\n           'newPattern' : replacePattern,\n            'fileName' : this.props.state.fileName\n        }\n        await searchAndReplace(req_body, this.props.showErrorMsg)\n        //FIXME: getCareLoc() should be here\n        //var caret = [this.props.state.startingLineNo, 0]\n        var body = await jump(this.props.state.startingLineNo, this.props.state.fileName, this.getCaretLoc())\n        console.log(\"--------------searchAndReplace-------------\");\n        if(body.status != null && body.status !== 200) {\n            return displayError(body, this.props.showErrorMsg);\n        } else {\n            var content = body['lines'].join('\\n')\n            console.log(content)\n            this.props.setData(content, body['lines'].length)\n            this.props.updateStartingLineNo(body['startingLineNo'])\n            console.log(\"--------------searchAndReplace-------------\");\n        }\n    }\n\n    handleReplaceEvent(evt){\n        let searchPattern = document.getElementById('find').value;\n        let replacePattern = document.getElementById('replace').value;\n        console.log(\"search pattern = \" + searchPattern)\n        console.log(\"replace pattern = \" + replacePattern)\n        this.searchReplace(searchPattern, replacePattern);\n        //this.searchAndReplace(searchPattern, replacePattern);\n        console.log(\"Replace\");\n    }\n\n    findAndReplaceInterface(evt){\n        let checkbox = document.getElementById('replaceButton');\n        if(checkbox.checked){\n            this.handleReplaceEvent(evt);\n        }\n        else{\n            this.handleFindEvent(evt);\n        }\n        document.getElementById('find').focus();\n        evt.preventDefault();\n    }\n\n    replaceToggle(evt){\n        let checkbox = document.getElementById('replaceButton');\n        if(!checkbox.checked){\n            document.getElementById('replace').style.display = 'none';\n        }\n        else{\n            document.getElementById('replace').style.display = 'initial';\n        }\n    }\n\n    getFileData(evt){\n        var reader = new FileReader();\n        var fileToRead = document.getElementById('myfile').files[0];\n        setTimeout(this.handleFiles(reader, fileToRead),1000);\n    }\n\n    async handleFiles(reader, fileToRead){\n        let data;\n        reader.readAsText(fileToRead);\n        reader.onloadend = evt => {\n            data = reader.result;\n\n            var requestBody = this.packEditRequest()\n            requestBody['fileName'] = fileToRead['name'];\n            requestBody['lineNumber'] = 0;\n            requestBody['dataNow'] = data;\n            this.props.writeFromFile(requestBody);\n        }\n        await this.setCaretLoc(0,0);\n    }\n\n    async handleJump(){\n        let jumpPos = parseInt(document.getElementById('jump').value);\n        var requestBody = this.packEditRequest();\n        requestBody['lineNumber'] = jumpPos;\n        requestBody['numberOfLines'] = 50;\n\n        var body = await jump(requestBody); //jumpPos, this.props.state.fileName, this.getCaretLoc());\n        this.applyResponse(body);\n        //var content = body['lines'].join('\\n');\n        //this.props.setData(content, body['lines'].length);\n        //this.props.updateStartingLineNo(body['startingLineNo']);\n        // this.props.scrollToRow(jumpPos);     self.props.scrollToRow(row);\n    }\n\n    handleJumpEvent(evt){\n        this.handleJump();\n        evt.preventDefault();\n    }\n\n    render = () =>{\n        return(\n            <Nav style={{background:\"rgb(30,31,38)\", height:\"7vh\", borderBottom:\"0.2px solid #555\"}}>\n                <Nav.Item className='p-2' style={{color:\"#F4F4F4\"}}>\n                    Code-Editor\n                </Nav.Item>\n\n                <Nav.Item className='ml-auto p-1'>\n                    <InputGroup size=\"sm\" style={{zIndex:\"200\"}}>\n                        <Form onSubmit = {this.handleJumpEvent} className=\"p-1\">\n                            <FormControl\n                                id = 'jump'\n                                placeholder = \"Jump\"\n                                aria-describedby=\"basic-addon1\"\n                                style={{background:\"rgb(40,40,40)\",height:\"4vh\",padding:\"0px\",border:\"none\", color:\"#fff\", fontSize:\"2vh\"}}\n                            />\n                            <Button type=\"submit\" style={{display:\"none\"}}></Button>\n                        </Form>\n                    </InputGroup>\n                </Nav.Item>\n\n                <Nav.Item className='p-1'>\n                    <InputGroup id='findReplace' size=\"sm\" style={{zIndex:\"200\"}}>\n                        <Form onSubmit = {this.findAndReplaceInterface} className=\"p-1\">\n                            <FormControl\n                                id = 'find'\n                                placeholder = \"Find\"\n                                aria-describedby=\"basic-addon1\"\n                                style={{background:\"rgb(40,40,40)\",height:\"4vh\",padding:\"0px\",border:\"none\", color:\"#fff\", fontSize:\"2vh\"}}\n                            />\n                            <FormControl\n                                id = 'replace'\n                                placeholder = \"Replace\"\n                                aria-describedby=\"basic-addon1\"\n                                style={{background:\"rgb(40,40,40)\",height:\"4vh\",padding:\"0px\",border:\"none\", marginTop:\"5px\", color:\"#fff\", fontSize:\"2vh\", zIndex:\"200\", display:\"none\"}}\n                            />\n                            <Button type=\"submit\" style={{display:\"none\"}}></Button>\n                        </Form>\n                        <input type=\"checkbox\" id=\"replaceButton\" onChange = {this.replaceToggle} style={{marginTop:\"2vh\"}}/>\n                    </InputGroup>\n                </Nav.Item>\n\n                <Nav.Item className='p-1' style={{float:\"right\",padding:\"0px\", margin:\"0px\"}}>\n                    <input type=\"file\" id=\"myfile\" name=\"myfile\" onChange={this.getFileData} hidden/>\n                    <Button size=\"sm\" variant=\"outline-light\" onClick={this.uploadFromFile}>Upload</Button>\n                </Nav.Item>\n\n                <Nav.Item className=\"p-1\" style={{float:\"right\",padding:\"0px\", margin:\"0px\"}}>\n                    <DropdownButton className=\"language\" size=\"sm\" title={this.props.language.toUpperCase()} variant=\"outline-light\" onSelect={this.props.changeLan}>\n                        <Dropdown.Item eventKey='c'>C</Dropdown.Item>\n                        <Dropdown.Item eventKey='cpp'>C++</Dropdown.Item>\n                        <Dropdown.Item eventKey='java'>Java</Dropdown.Item>\n                        <Dropdown.Item eventKey='python'>Python</Dropdown.Item>\n                    </DropdownButton>\n                </Nav.Item>\n\n                <Nav.Item className=\"p-1\" style={{float:\"right\",padding:\"0px\", margin:\"0px\"}}>\n                    <Button size=\"sm\" variant=\"success\" onClick={this.runCode}>Run</Button>\n                </Nav.Item>\n            </Nav>\n        );\n    }\n}\n\nexport default Navbar;\n","import Prism from 'prismjs';\nvar Highlight = (function(){\n    return {\n        init: function(inputSel, outputSel, languageSel){\n            this.focusInput(inputSel);\n            this.listenForInput(inputSel);\n            this.renderOutput(outputSel, document.querySelector(inputSel).value);\n            this.listenerForScroll(inputSel, outputSel);\n        },\n\n        listenForInput: function(inputSel){\n            var self = this;\n            document.querySelector(inputSel).addEventListener('input', function(key){\n                var input = this,\n                    selStartPos = input.selectionStart,\n                    inputVal = input.value;\n                if(key.keyCode === 9){\n                    input.value = inputVal.substring(0, selStartPos) + \"    \" + inputVal.substring(selStartPos, input.value.length);\n                    input.selectionStart = selStartPos + 4;\n                    input.selectionEnd = selStartPos + 4;\n                    key.preventDefault();\n                }\n                self.renderOutput('.code-output', this.value);\n            });\n            document.querySelector(inputSel).addEventListener('keydown', function(key){\n                var input = this,\n                    selStartPos = input.selectionStart,\n                    inputVal = input.value;\n                if(key.keyCode === 9){\n                    input.value = inputVal.substring(0, selStartPos) + \"    \" + inputVal.substring(selStartPos, input.value.length);\n                    input.selectionStart = selStartPos + 4;\n                    input.selectionEnd = selStartPos + 4;\n                    key.preventDefault();\n                    key.stopImmediatePropagation();\n                }\n                self.renderOutput('.code-output', this.value);\n            });\n            Prism.highlightAll();\n        },\n\n        listenerForScroll: function(inputSel, outputSel){\n            document.querySelector(inputSel).addEventListener('scroll', function(){\n                document.querySelector(outputSel).scrollTop = this.scrollTop;\n            });\n        },\n\n        renderOutput: function(outputSel, value){\n            document.querySelector('code')\n                .innerHTML = (value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\")\n                .replace(/>/g, \"&gt;\") + \"\\n\");\n\n            Prism.highlightAll();\n        },\n\n        focusInput: function(inputSel){\n            var input = document.querySelector(inputSel);\n            input.focus();\n            input.selectionStart = input.value.length;\n            input.selectionEnd = input.value.length;\n        }\n    }\n})();\n\nexport default Highlight;\n","import React from 'react';\nimport './Code.css';\nimport {Row, Col} from 'react-bootstrap';\nimport Highlight from './Highlight';\nimport equal from 'fast-deep-equal';\nimport {getCopyBuffer, setCopyBuffer, cut, copy, paste, searchReplace, edit, jump, replace, save, redo, undo, getPrevLines, getNextLines, search, displayError} from './FetchCalls';\nimport '../node_modules/prismjs/components/prism-java';\nimport '../node_modules/prismjs/components/prism-c';\nimport '../node_modules/prismjs/components/prism-cpp';\nimport '../node_modules/prismjs/components/prism-python';\n\nclass Code extends React.Component{\n\n    fetchNewLines = true;\n    editInProgress = false;\n\n    constructor(){\n        super();\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleFindUpDownEsc = this.handleFindUpDownEsc.bind(this);\n        this.jumpToSearchLine = this.jumpToSearchLine.bind(this);\n        this.handleScroll = this.handleScroll.bind(this);\n        this.handleMouseClick = this.handleMouseClick.bind(this);\n        this.preventDefaultClipboardEvents = this.preventDefaultClipboardEvents.bind(this);\n    }\n\n    getCaretLoc(data=document.querySelector(\".code-input\").value, selection=document.querySelector(\".code-input\").selectionEnd){\n        var row = 0;\n        var col = 0;\n        data = data.split(\"\\n\");\n        var prevLen = 0;\n        while(row<data.length && (prevLen+data[row].length+1)<selection){\n            prevLen=prevLen+data[row].length+1;\n            row++;\n        }\n        col = selection-prevLen;\n        return [row,col];\n    }\n\n    setCaretLoc(row, col, len=0){\n        var textArea = document.querySelector('.code-input');\n        var data = textArea.value;\n        data = data.split(\"\\n\");\n        var prevLen = 0;\n        for (var i = 0; i < row; i++) {\n            prevLen = prevLen + data[i].length + 1;\n        }\n        prevLen += col;\n        textArea.selectionStart=prevLen;\n        textArea.selectionEnd=prevLen+len;\n    }\n\n    async jumpToSearchLine(listOfCursors, lastIndex, self){\n        var lineNo = listOfCursors[lastIndex]['lineNo'];\n        let searchTermRow = lineNo;\n        let searchLen = document.getElementById('find').value.length;\n        var body;\n        var requestBody = this.packEditRequest()\n        requestBody['numberOfLines'] = 50;\n        if(lineNo < self.props.state.startingLineNo){\n            requestBody['lineNumber'] = lineNo;\n            body = await jump(requestBody);//lineNo, self.props.state.fileName, this.getCaretLoc());\n        }\n        else if(lineNo>=(self.props.state.startingLineNo+self.props.state.data.split(\"\\n\").length)){\n            requestBody['lineNumber'] = lineNo;\n            body = await jump(requestBody);//lineNo, self.props.state.fileName, this.getCaretLoc());\n        }\n        else{\n            requestBody['lineNumber'] = this.props.state.startingLineNo;\n            body = await jump(requestBody);//this.props.state.startingLineNo, self.props.state.fileName, this.getCaretLoc());\n        }\n        if(body.status != null && body.status !== 200) {\n            displayError(body, self.props.showErrorMsg);\n        } else {\n            var content = body['lines'].join('\\n');\n            await self.props.setData(content, body['lines'].length);\n            await self.props.updateStartingLineNo(body['startingLineNo']);\n            searchTermRow = lineNo - this.props.state.startingLineNo;\n            this.setCaretLoc(searchTermRow, listOfCursors[lastIndex]['columnNo'], searchLen);\n            self.props.scrollToRow(searchTermRow);\n        }\n    }\n\n    async handleFindUpDownEsc(evt){\n        let self = this;\n        if(evt.key==='Escape'){\n            document.getElementById('find').value='';\n            self.props.setSearchResult(null);\n        }\n        else{\n            let lastSearch = self.props.state.searchResult;\n            let listOfCursors = lastSearch['listOfCursors'];\n\n            var incr = {\n                'ArrowUp' : -1,\n                'ArrowDown' : +1\n            }\n\n            if (evt.key in incr && lastSearch!==null && listOfCursors.length > 0) {\n                // console.log(\"========Key up/down received============\");\n                // console.log(lastSearch)\n                var lastIndex = lastSearch['presentIndex'];\n\n                lastIndex = (lastIndex + incr[evt.key] + listOfCursors.length) % listOfCursors.length;\n                lastSearch['presentIndex'] = lastIndex;\n                self.props.setSearchResult(lastSearch);\n                self.jumpToSearchLine(listOfCursors, lastIndex, self);\n            }\n        }\n        evt.preventDefault();\n    }\n\n    // async paste(content) {\n    //     var position = document.querySelector('.code-input').selectionStart;\n    //     var buffer = await getCopyBuffer(this.props.showErrorMsg);\n    //     var p1 = content.substr(0, position)\n    //     var p2 = content.substr(position, content.length)\n    //     var newContent = p1 + buffer + p2\n    //     await this.props.setData(newContent, this.props.state.length)\n    //     document.querySelector('.code-input').selectionStart = position;\n    //     document.querySelector('.code-input').selectionEnd = position;\n    //     return newContent;\n    // }\n\n    packEditRequest() {\n        var textAreaValue = document.querySelector(\".code-input\").value;\n        var startCaret = this.getCaretLoc(textAreaValue, document.querySelector(\".code-input\").selectionStart)\n        var endCaret = this.getCaretLoc(textAreaValue, document.querySelector(\".code-input\").selectionEnd)\n\n        var data = textAreaValue;\n        //this.props.setData(data, this.props.state.length);//data.split(\"\\n\").length);//NOT REQUIRED\n        //data = data.split(\"\\n\");\n\n        var newRequestBody = {\n            'cursorStart': {\n                'lineNo': startCaret[0],\n                'columnNo' : startCaret[1]\n            },\n\n            'cursorEnd': {\n                'lineNo' : endCaret[0],\n                'columnNo' : endCaret[1]\n            },\n            'startingLineNo': this.props.state.startingLineNo,\n            'endingLineNo': this.props.state.startingLineNo + this.props.state.length,\n            'fileName' : this.props.state.fileName,\n            'dataNow': data,\n            'start': document.querySelector(\".code-input\").selectionStart,\n            'end' : document.querySelector(\".code-input\").selectionEnd\n        }\n\n        return newRequestBody;\n    }\n    applyResponse(pageResponse) {\n        console.log(pageResponse);\n        var text = pageResponse['lines'].join(\"\\n\")\n        this.props.setData(text, pageResponse['lines'].length);\n        this.props.updateStartingLineNo(pageResponse['startingLineNo'])\n\n        var row = pageResponse['cursorAt']['lineNo'] - this.props.state.startingLineNo;\n        var col = pageResponse['cursorAt']['columnNo']\n        this.setCaretLoc(row, col);\n    }\n\n    async redo() {\n        var newRequestBody = this.packEditRequest();\n        var pageResponse = await redo(newRequestBody);\n        this.applyResponse(pageResponse);\n    }\n\n    async undo() {\n        var newRequestBody = this.packEditRequest();\n        var pageResponse = await undo(newRequestBody);\n        this.applyResponse(pageResponse);\n    }\n\n    async copy() {\n        var newRequestBody = this.packEditRequest();\n        var pageResponse = await copy(newRequestBody);\n        await pageResponse;\n        this.applyResponse(pageResponse);\n    }\n\n    async paste() {\n        var newRequestBody = this.packEditRequest();\n        var pageResponse = await paste(newRequestBody);\n        await pageResponse;\n        this.applyResponse(pageResponse);\n    }\n\n    async cut() {\n        var newRequestBody = this.packEditRequest();\n        var pageResponse = await cut(newRequestBody);\n        await pageResponse;\n        this.applyResponse(pageResponse);\n    }\n\n    async handleMouseClick(evt) {\n        this.fetchNewLines = true;\n    }\n\n    preventDefaultClipboardEvents(e){\n        e.preventDefault();\n        e.nativeEvent.stopImmediatePropagation();\n    }\n\n    async handleKeyDown(evt) {\n        let textArea = document.querySelector(\".code-input\");\n        let data = textArea.value.split(\"\\n\");\n        let [startRow,startCol] = this.getCaretLoc(textArea.value, textArea.selectionStart);\n        let [endRow, endCol] = this.getCaretLoc(textArea.value, textArea.selectionEnd);\n        var request_body = {\n            pageId: 1,\n            data : data,\n            startRow : startRow,\n            startCol: startCol,\n            endRow: endRow,\n            endCol: endCol\n        }\n\n        console.log(evt.key);\n        if(evt.key < 255) {\n            this.props.forceEditCall();\n        }\n\n        if(this.props.state.searchResult!==null){\n            if(evt.key==='ArrowUp' || evt.key==='ArrowDown' || evt.key==='Escape'){\n                this.handleFindUpDownEsc(evt);\n            }\n        } else if(evt.key==='ArrowUp' || evt.key==='ArrowDown') {\n            this.fetchNewLines = true;\n        }\n\n        if(evt.ctrlKey){\n            switch(evt.key){\n                //FIXME: get host details from config file\n                case 'c':\n                    this.copy();\n                    //var data_copied = document.getSelection().toLocaleString();\n                    //setCopyBuffer(data_copied, this.props.showErrorMsg);\n                    evt.preventDefault();\n                    break;\n                case 'f':\n                    document.getElementById('find').focus();\n                    evt.preventDefault();\n                    break;\n                case 'j':\n                    document.getElementById('jump').focus();\n                    evt.preventDefault();\n                    break;\n                case 'r':\n                    replace(request_body, this.props.showErrorMsg);\n                    evt.preventDefault();\n                    break;\n                case 's':\n                    save(request_body, this.props.showErrorMsg);\n                    evt.preventDefault();\n                    break;\n                // case 'd':\n                //     var presentContent = this.props.state.data;\n                //     var lineNo = this.props.state.startingLineNo + presentContent.split('\\n').length;\n                //     var body = await getNextLines(lineNo, this.props.state.fileName);\n                //     this.props.updateData(body['lines'].join('\\n'), false, body['lines'].length);\n                //     evt.preventDefault();\n                //     break;\n                // case 'u':\n                //     body = await getPrevLines(this.props.state.startingLineNo, this.props.state.fileName);\n                //     this.props.updateStartingLineNo(body['startingLineNo']);\n                //     this.props.updateData(body['lines'].join('\\n'), true, body['lines'].length);\n                //     evt.preventDefault();\n                //     break;\n                case 'v':\n                    await this.paste();\n                    //await this.editBackEnd();\n                    //var lineNo = this.props.state.startingLineNo;\n                    //var body = await jump(lineNo, this.props.state.fileName, this.getCaretLoc());\n                    //if(body.status != null && body.status !== 200) {\n                    //    displayError(body, this.props.showErrorMsg);\n                    //}\n                    //else {\n                    //    console.log(body['lines'])\n                    //    var content = body['lines'].join('\\n');\n                    //    this.props.setData(content, body['lines'].length);\n                    //    this.props.updateStartingLineNo(body['startingLineNo']);\n                    //}\n                    //evt.preventDefault();\n                    break;\n                case 'x':\n                    this.cut();\n                    //this.editBackEnd();\n                    evt.preventDefault();\n                    break;\n                case 'y':\n                    redo(request_body, this.props.showErrorMsg);\n                    evt.preventDefault();\n                    break;\n                case 'z':\n                    var body = await undo(this.props.state.fileName);\n                    if(body.status != null && body.status !== 200) {\n                        return displayError(body, this.props.showErrorMsg);\n                    } else {\n                        var content = body['lines'].join('\\n');\n                        this.props.setData(content, body['lines'].length);\n                        this.props.updateStartingLineNo(body['startingLineNo']);\n                    }\n                    evt.preventDefault();\n                    break;\n                default :\n            }\n        }\n    }\n\n    async editBackEnd() {\n        this.props.forceEditCall(false);\n        console.log('calling edit')\n        var newRequestBody = this.packEditRequest();\n        var pageResponse = await edit(newRequestBody, this.props.showErrorMsg);\n        await pageResponse\n        this.applyResponse(pageResponse);\n    }\n\n    handleScroll(evt){\n        document.querySelector('.code-output').scrollLeft = document.querySelector('.code-input').scrollLeft;\n    }\n\n    componentDidMount() {\n        Highlight.init('.code-input', '.code-output', '.language');\n        let self = this;\n        setInterval(async function(){\n            let data = document.querySelector(\".code-input\").value;\n            data = data.split(\"\\n\");\n            let numberOfLines = data.length;\n            document.getElementById('lineNo').innerHTML=\"\";\n            for(let i=self.props.state.startingLineNo;i<self.props.state.startingLineNo+numberOfLines;i++){\n                document.getElementById(\"lineNo\").innerHTML += \"<div id='row\" + (i) + \"'>\"+(i)+\"</div>\";\n            }\n            var [row,col] = self.getCaretLoc();\n            if(self.props.state.data.length>0 && self.fetchNewLines){\n                if(self.props.state.needsOfflineEdit){\n                    // console.log(self.props.state.data);\n                    // console.log(document.querySelector('.code-input').value)\n                    await self.editBackEnd();\n                }\n                self.fetchNewLines = false;\n                if(Math.abs(row)<5 && self.props.state.startingLineNo!==0){\n                    var requestBody = self.packEditRequest();\n                    requestBody['lineNumber'] = self.props.state.startingLineNo;\n                    requestBody['numberOfLines'] = 50;\n                    let body = await getPrevLines(requestBody);//self.props.state.startingLineNo, self.props.state.fileName, self.getCaretLoc());\n                    if(body.status != null && body.status !== 200) {\n                        displayError(body, self.props.showErrorMsg);\n                    } else if(body['lines'].length !== 0){\n                        //self.applyResponse(body);\n                        self.props.updateStartingLineNo(body['startingLineNo']);\n                        self.props.updateData(body['lines'].join('\\n'), true, body['lines'].length);\n                    }\n                }\n                else if ((self.props.state.data.split(\"\\n\").length > 0) && Math.abs(self.props.state.data.split(\"\\n\").length - row)<5){\n\n                    console.log(\"CARET POS = \", self.getCaretLoc())\n\n                    let presentContent = self.props.state.data;\n                    let lineNo = self.props.state.startingLineNo + presentContent.split('\\n').length;\n                    var requestBody = self.packEditRequest();\n                    requestBody['lineNumber'] = lineNo;\n                    requestBody['numberOfLines'] = 50;\n                    let body = await getNextLines(requestBody);//lineNo, self.props.state.fileName, self.getCaretLoc());\n                    console.log(\"===========\");\n                    console.log(body);\n                    console.log(\"===========\");\n\n                    if(body.status != null && body.status !== 200) {\n                        displayError(body, self.props.showErrorMsg);\n                    } else if(body['lines'].length !== 0){\n                        self.props.updateData(body['lines'].join('\\n'), false, body['lines'].length);\n                        self.setCaretLoc(body['cursorAt']['lineNo'], body['cursorAt']['columnNo']);\n                    }\n                }\n            }\n            document.getElementById('rowNumber').innerHTML = \"Row: \"+ (self.props.state.startingLineNo + row);\n            document.getElementById('colNumber').innerHTML = \"Col: \"+col;\n        }, 500)\n\n        setInterval(function() {\n            var searchNotInProgress = (self.props.state.searchResult === null);\n            if (searchNotInProgress && self.props.state.needsOfflineEdit){\n                // console.log(self.props.state.data);\n                // console.log(document.querySelector('.code-input').value)\n                console.log(\"Interval expired\");\n                if(!self.editInProgress) {\n                    self.editInProgress = true;\n                    self.editBackEnd().then(() => self.editInProgress = false);\n                }\n            }\n        }, 2000);\n        this.props.setEditHandler(this);\n\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log(this.props.state);\n        if(!equal(this.props.state, prevProps.state)){\n            document.querySelector('.code-input').value = this.props.state.data;\n        }\n        Highlight.init('.code-input', '.code-output', '.language');\n    }\n\n    render = () => {\n        return (\n            <div style={{height:\"100%\", width:\"100%\"}}>\n                <Row style={{height:\"calc(100vh - 80px)\", margin:\"0px\",background:\"#000\", overflow:\"auto\"}}>\n                    <Col sm='1'id=\"row_num\" style={{background:\"rgba(30,31,37,0.5)\", padding:\"0px\", margin:\"0px\"}}>\n                        <div\n                            id=\"lineNo\"\n                            style={{width:\"100%\", textAlign:\"center\", color:\"#f4f4f4\", fontSize:\"0.8rem\"}}\n                        >\n                            <div>1</div>\n                        </div>\n                    </Col>\n                    <Col sm='11' style={{padding:\"0px\", margin:\"0px\"}} spellCheck='false'>\n                        <textarea\n                            className='code-input'\n                            onKeyDown={this.handleKeyDown}\n                            onCut = {this.preventDefaultClipboardEvents}\n                            onCopy = {this.preventDefaultClipboardEvents}\n                            onPaste = {this.preventDefaultClipboardEvents}\n                            onClick={this.handleMouseClick}\n                            defaultValue = {this.props.state.data}\n                            onScroll = {this.handleScroll}\n                        >\n                        </textarea>\n                        <pre className=\"code-output\">\n                            <code\n                                className={\"language-\"+this.props.state.language}\n                            >\n                            </code>\n                        </pre>\n                    </Col>\n                </Row>\n                <div style={{color:\"#f4f4f4\"}}>\n                    <span id=\"responseTime\">Response Time: 0ms</span>\n                    <div style={{float:\"right\"}}>\n                        <span id='rowNumber'>Row: 0</span>\n                        <span>    </span>\n                        <span id='colNumber'>Col: 0</span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\nexport default Code;\n","import React from 'react';\nimport {Nav} from 'react-bootstrap';\n\nclass CustomInput extends React.Component{\n\n    render() {\n        return(\n            <div style={{height:\"100%\", width:\"100%\",background:\"#000\", margin:\"0px\"}}>\n                <Nav style={{background:\"rgb(30,31,38)\", height:\"10%\", color:\"#f4f4f4\"}}>\n                    <Nav.Item>\n                        Custom Input\n                    </Nav.Item>\n                </Nav>\n                <textarea\n                    style={{fontSize:\"2vh\",height:\"90%\", width:\"100%\",background:\"#000\", border:\"0px\", color:\"#a0a0a0\"}}\n                    className={\"custom-input\"}\n                >\n            </textarea>\n            </div>\n        );\n    }\n}\n\nexport default CustomInput;\n","import React from 'react';\nimport {Nav} from 'react-bootstrap';\n\nclass Output extends React.Component{\n    render() {\n        return(\n            <div style={{height:\"100%\", width:\"100%\",background:\"#000\", margin:\"0px\"}}>\n                <Nav style={{background:\"rgb(30,31,38)\", height:\"10%\", color:\"#f4f4f4\"}}>\n                    <Nav.Item>\n                        Output\n                    </Nav.Item>\n                </Nav>\n                <textarea readOnly\n                          style={{height:\"90%\", width:\"100%\",background:\"#000\", border:\"0px\", color:\"#a0a0a0\"}}\n                          value={this.props.state.result}\n                >\n            </textarea>\n            </div>\n        );\n    }\n}\n\nexport default Output;\n","import React from 'react';\nimport {Fragment} from 'react';\nimport Navbar from './Navbar';\nimport Code from './Code';\nimport CustomInput from './CustomInput';\nimport Output from './Output';\nimport {Row, Col} from 'react-bootstrap';\nimport {displayError, load} from './FetchCalls';\nimport equal from 'fast-deep-equal'\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nclass Editor extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            language: \"c++\",\n            data: \"\",\n            startingLineNo: 0,\n            length: 0,\n            fileName: \"scratch\",\n            searchResult: null,\n            showError: false,\n            errorMsg: \"\",\n            needsOfflineEdit: false,\n            inputs: \"\"\n        };\n        this.changeLan = this.changeLan.bind(this);\n        this.writeFromFile = this.writeFromFile.bind(this);\n        this.updateStartingLineNo = this.updateStartingLineNo.bind(this);\n        this.updateData = this.updateData.bind(this);\n        this.setData = this.setData.bind(this);\n        this.scrollToRow = this.scrollToRow.bind(this);\n        this.setSearchResult = this.setSearchResult.bind(this);\n        this.showErrorMsg = this.showErrorMsg.bind(this);\n        this.hideErrorMsg = this.hideErrorMsg.bind(this);\n        this.setInputs = this.setInputs.bind(this);\n        this.setResult = this.setResult.bind(this);\n        this.forceEditCall = this.forceEditCall.bind(this);\n        this.setEditHandler = this.setEditHandler.bind(this);\n    }\n\n    scrollToRow(searchRow){\n        let scrollElement = document.getSelection().focusNode.parentElement;\n        //let searchRow = row - this.state.startingLineNo;\n        console.log(\"scrollToRow\");\n        console.log(searchRow);\n        console.log(\"scrollToRow\");\n        if((scrollElement.scrollTop)>searchRow*25*window.devicePixelRatio || (scrollElement.scrollTop + scrollElement.scrollHeight) <= searchRow*25*window.devicePixelRatio){\n            scrollElement.scrollTop = searchRow*25*window.devicePixelRatio;\n        }\n    }\n\n    changeLan = evt =>{\n        this.setState({language: evt});\n    }\n\n    updateLanguage(page) {\n        console.log(page);\n        console.log('Startingline number = ' + page['startingLineNo']);\n        var tokens = page['fileName'].split('.');\n        var ext = tokens[tokens.length-1];\n        const language = {\n            'cpp' : 'C++',\n            'py' : 'Python',\n            'java' : 'Java',\n            'c': 'C'\n        };\n        var lang = ext;\n        if (ext in language){\n            lang = language[ext];\n        }\n        this.setState({language:lang});\n        this.setState({startingLineNo:parseInt(page['startingLineNo'])});\n        this.setState({fileName:page['fileName']});\n        console.log(\"done updating language\");\n    }\n\n    async writeFromFile(file_info) {\n        console.log('Starting writeFromFile');\n        let page = await load(file_info, this.showErrorMsg);\n        if(page.status != null && page.status !== 200) {\n            return displayError(page, this.showErrorMsg());\n        }\n\n        console.log(page);\n        this.updateLanguage(page);\n        var code = page['lines'].join('\\n');\n        this.setState({data:code});\n        this.setState({length:page['lines'].length})\n        console.log('done writeFromFile');\n    }\n\n    updateStartingLineNo(lineNo) {\n        this.setState({startingLineNo:lineNo})\n    }\n\n    setSearchResult(searchResult) {\n        this.setState({searchResult:searchResult});\n    }\n\n    setData(content, contentLength) {\n        this.setState({data:content})\n        this.setState({length:contentLength})\n    }\n\n    updateData(content, before, newContentLength) {\n        var newContent = \"\";\n        if (before) {\n            newContent = content + '\\n' + this.state.data\n        } else {\n            newContent = this.state.data + '\\n' + content\n        }\n        this.setState({data:newContent})\n        this.setState({length:this.state.length + newContentLength})\n    }\n\n    componentDidUpdate(prevProps){\n        if(!equal(this.state, prevProps.state)){\n            this.render();\n        }\n    }\n\n    hideErrorMsg() {\n        this.setState({showError: false});\n    }\n\n    showErrorMsg(errorMsg) {\n        this.setState({showError: true});\n        this.setState({errorMsg: errorMsg});\n    }\n\n    forceEditCall(force = true) {\n        this.setState({needsOfflineEdit: force});\n    }\n\n    setInputs(inputs) {\n        this.setState({inputs: inputs});\n    }\n\n    setResult(result) {\n        this.setState({result: result});\n    }\n\n    setEditHandler(editHandler) {\n        this.setState({editHandler: editHandler});\n    }\n\n    render(){\n        return(\n            <Fragment>\n                <Modal show={this.state.showError}>\n                    <Modal.Header>\n                        <Modal.Title>Error occured while calling the backend</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className={\"error-body\"}>\n                        {this.state.errorMsg}\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.hideErrorMsg}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Navbar\n                    language={this.state.language}\n                    changeLan = {this.changeLan}\n                    writeFromFile = {this.writeFromFile}\n                    state={this.state}\n                    setData={this.setData}\n                    updateStartingLineNo={this.updateStartingLineNo}\n                    setSearchResult={this.setSearchResult}\n                    scrollToRow = {this.scrollToRow}\n                    setResult={this.setResult}\n                    showErrorMsg = {this.showErrorMsg}\n                />\n                <Row style={{height:\"93vh\", margin:\"0px\",  background:\"rgb(30,31,37)\", overflowY:\"hidden\"}}>\n                    <Col sm='6' style={{margin:\"0px\", padding:\"0px\"}}>\n                        <div style={{height:\"100%\", width:\"100%\", padding:\"7px 7px 7px 7px\"}}>\n                            <Code\n                                state={this.state}\n                                updateStartingLineNo={this.updateStartingLineNo}\n                                updateData={this.updateData}\n                                setData={this.setData}\n                                setSearchResult={this.setSearchResult}\n                                scrollToRow = {this.scrollToRow}\n                                showErrorMsg = {this.showErrorMsg}\n                                hideErrorMsg = {this.hideErrorMsg}\n                                forceEditCall = {this.forceEditCall}\n                                setEditHandler = {this.setEditHandler}\n                            />\n                        </div>\n                    </Col>\n                    <Col sm='6' style={{margin:\"0px\", padding:\"0px\"}}>\n                        <Row style={{height:\"46.5vh\", margin:\"0px\"}}>\n                            <div style={{height:\"100%\", width:\"100%\", padding:\"0px 7px 0px 7px\"}}>\n                                <CustomInput\n                                    state={this.state}\n                                    setInputs={this.setInputs}\n                                />\n                            </div>\n                        </Row>\n                        <Row style={{height:\"46.5vh\", margin:\"0px\"}}>\n                            <div style={{height:\"100%\", width:\"100%\", padding:\"0px 7px 7px 7px\"}}>\n                                <Output\n                                    state={this.state}\n                                />\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nexport default Editor;\n","import React from 'react';\nimport './App.css';\nimport Editor from './Editor'\n\nfunction App() {\n  return (\n      <Editor/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}